
public class BeamRegul extends Regul {
	
	/** calculates the control signal
	 *  as for now it returns a double, to be changed
	 *  to an OutSignal object if needed when we do
	 *  more advanced stuffs
	 */
	public double calculateOutput(double y, double yref) {
		// to be written
		return 0;
	}

	/** updates the controller state
	 *  uses tracking-based anti-windup
	 */
	public void updateState(double u) {
		// to be written
	}


	
	
	
	
}
	
	
	/*Regul nextRegul;
	
	public BeamRegul() {
		// TODO Auto-generated constructor stub
	}

	public OutSignal calcOut(Measurement measurement) {
		// TODO Auto-generated method stub
		return null;
	}

	public void init(long t0, Regul prevRegul) {
		//Obs handle null prevRegul
		finishChecker = new RegulCheckFinished();
		//Maybe not recreate thread
		finishChecker.start();
	}

	public void updateState() {
		// TODO Auto-generated method stub
	}
	
	public void setNextRegul(Regul r) {
		nextRegul = r;
	}

	public boolean checkFinished() {
		// TODO Auto-generated method stub
		return false;
	}

	public Regul getNextRegul() {
		return nextRegul;
	}

*/
